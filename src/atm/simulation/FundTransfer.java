package atm.simulation;

import java.security.SecureRandom;
import java.util.List;
import java.util.Optional;
import java.util.Random;
import java.util.Scanner;
import java.util.function.Predicate;

/**
 *
 * @author Ardi_PR876
 */
public class FundTransfer {
    public static String FundTransferScreen(Account account, List<Account> database) {
        boolean repeat = false;
        String goToScreen = ScreenEnum.Screen.Transaction.name();

        do{
            System.out.println("---------------------------------------------------------");
            System.out.println("Fund Transfer");

            System.out.println("Please enter destination account and press enter to continue ");
            System.out.println("or press enter to go back to Transaction Screen: ");
            System.out.print("Destination: ");

            Scanner scannerDestination = new Scanner(System. in);
            String destination = scannerDestination.nextLine().trim();
            boolean validDestination = Validation.OnlyNumberValidation(destination);

            if(validDestination) {
                Predicate<Account> predicate = p -> p.getAccountNumber().equals(destination);
                Optional<Account> destinationAccount = database.stream().filter(predicate).findFirst();

                if(!destinationAccount.isPresent()) {
                    System.out.println("---------------------------------------------------------");
                    System.out.println("Invalid account");
                    repeat = false;
                } else {
                    System.out.println("---------------------------------------------------------");
                    System.out.println("Please enter transfer amount and press enter to continue");
                    System.out.println("or press enter to go back to Transaction: ");
                    System.out.print("Amount: ");

                    Scanner scannerAmount = new Scanner(System. in);
                    String strAmount = scannerAmount.nextLine().trim();
                    boolean validAmount = Validation.OnlyNumberValidation(strAmount);

                    if(validAmount) {
                        Double amount = Double.parseDouble(strAmount);
                        if(amount > 1000){
                            System.out.println("---------------------------------------------------------");
                            System.out.println("Maximum amount to withdraw is $1000");
                            repeat = false;
                        } else if (amount < 1){
                            System.out.println("---------------------------------------------------------");
                            System.out.println("Minimum amount to withdraw is $1");
                            repeat = false;
                        } else if(amount > account.balance){
                            System.out.println("---------------------------------------------------------");
                            System.out.println("Insufficient balance $" + amount);
                            repeat = false;
                        } else {
                            String refNumber = GetRandomString();
                            System.out.println("---------------------------------------------------------");
                            System.out.print("Reference Number: " + refNumber);
                            System.out.println(" (This is an autogenerated number)");
                            System.out.print("press enter to continue ");
                            String scannerRefNumber = new Scanner(System. in).nextLine().trim();

                            System.out.println("---------------------------------------------------------");
                            Account destinationAcc = destinationAccount.get();
                            System.out.println("Transfer Confirmation");
                            System.out.println("Destination Account \t : " + destination);
                            System.out.println("Destination Name \t : " + destinationAcc.name);
                            System.out.println("Transfer Amount \t : $" + amount);
                            System.out.println("Reference Number \t : " + refNumber);
                            System.out.println("");
                            System.out.println("1. Confirm Transaction");
                            System.out.println("2. Cancel Transaction");
                            System.out.print("Choose Option[2]: ");
                            String scannerConfirmTransaction = new Scanner(System. in).nextLine().trim();

                            if(scannerConfirmTransaction.equals("1")){
                                boolean transferSucceed = AccountService.FundTransfer(account, destinationAcc, amount);
                                if(transferSucceed){
                                    goToScreen = Summary(account, destinationAcc, amount, refNumber);
                                }
                            }
                        }
                    } else {
                        System.out.println("---------------------------------------------------------");
                        System.out.println("Invalid Amount: should only contains numbers");
                        repeat = false;
                    }
                }
            } else if(!validDestination && !destination.isEmpty()) {
                System.out.println("---------------------------------------------------------");
                System.out.println("Invalid account");
                repeat = false;
            }
        } while(repeat);
        return goToScreen;
    }
    
    public static String Summary(Account account, Account destination, Double amount, String refNumber){
        System.out.println("---------------------------------------------------------");
        System.out.println("Fund Transfer Summary");
        System.out.println("Destination Account \t : " + destination.accountNumber);
        System.out.println("Destination Name \t : " + destination.name);
        System.out.println("Transfer Amount \t : $" + amount);
        System.out.println("Reference Number \t : " + refNumber);
        System.out.println("Balance \t\t : $" + account.balance);
        System.out.println("");
        System.out.println("1. Transaction");
        System.out.println("2. Exit");
        System.out.print("Choose Option[2]: ");
        String scannerConfirmTransaction = new Scanner(System. in).nextLine().trim();
        
        if(scannerConfirmTransaction.equals("1")){
            return ScreenEnum.Screen.Transaction.name();
        } else {
            return ScreenEnum.Screen.Login.name();
        }
    }
    
    public static String GetRandomString() {
        SecureRandom random = new SecureRandom();
        String DATA_FOR_RANDOM_STRING = "0123456789";
        StringBuilder sb = new StringBuilder(6);
        for (int i = 0; i < 6; i++) {
            int rndCharAt = random.nextInt(DATA_FOR_RANDOM_STRING.length());
            char rndChar = DATA_FOR_RANDOM_STRING.charAt(rndCharAt);
            sb.append(rndChar);
        }
        return sb.toString();
    }
}
